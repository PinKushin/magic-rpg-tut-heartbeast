<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>scrate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialise the crate
topx = x;
topy = y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the crate
var xview = view_xview[view_current];
var yview = view_yview[view_current];
var wview = view_wview[view_current] / 2;
var hview = view_hview[view_current] / 2;
dis = point_distance (xview + wview, yview + hview, x, y);

///make sure we are in the room/ draw distance
//48 isnt exact but it works
if dis &gt; 480 {exit};

//call code after the distance check
dir = point_direction (xview + wview, yview + hview, x, y);
var calc = (dis/4) * (((48*-1) /112) +1);
var xdis = lengthdir_x (calc, dir);
var ydis = lengthdir_y (calc, dir);
topx = x + xdis
topy = y + ydis

//draw the crate
draw_self();

///draw shadow
draw_sprite_ext (scrateshadow, image_index, x, y, image_xscale, image_yscale, image_angle, c_black, 0.3)

//draw the side
drawwall("right", c_white);
drawwall("left", c_gray);
drawwall("top", c_white);
drawwall("bottom", c_gray)

//draw the lid
draw_sprite_ext (sprite_index, 0, topx, topy, image_xscale, image_yscale, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
